{
  "PAR_CLOCK" : {
    "wg_id_1": [ 1, 2        ],
    "wg_id_2": [ 1, 2        ],
    "wi_id_1": [ 1, 2        ],
    "wi_id_2": [ 1, 2        ]
  },
  "SEQ_CLOCK" : {
    "lcl_til_id_1": [ 1, 2         ],
    "lcl_til_id_2": [ 1, 2         ],
    "prv_til_id_1": [ 1, 2         ],
    "prv_til_id_2": [ 1, 2         ],
    "seq_til_id_1": [ 1, 2         ],
    "seq_til_id_2": [ 1, 2         ]
  },
  "CUBES" : {
    "input buffer": {
      "mapping": [
        // 1. Würfel: IS (global memory)
        [ [  ],
          [ 0, "32  + 2 - 1" ] ,
          [ 0, "32  + 2 - 1" ] ,
          [ 0, 0             ] ],
        // 2. Würfel: WGs
        [ [ "wg_id_1", "wg_id_2" ],
          [ "(wg_id_1-1)*(32 /2       )" , "(wg_id_1)*(32 /2       ) + 2 - 1" ] ,
          [ "(wg_id_2-1)*(32 /2       )" , "(wg_id_2)*(32 /2       ) + 2 - 1" ] ,
          [ 0                            , 0                                  ] ],
        // 3. Würfel: local tiles (local memory)
        [ [ "wg_id_1", "wg_id_2", "lcl_til_id_1", "lcl_til_id_2" ],
          [ "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        )" , "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1)*(32 /2       /2        ) + 2 - 1" ] ,
          [ "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        )" , "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2)*(32 /2       /2        ) + 2 - 1" ] ,
          [ 0                                                                        , 0                                                                              ] ],
        // 4. Würfel: private tiles (private memory)
        [ [ "wg_id_1", "wg_id_2", "lcl_til_id_1", "lcl_til_id_2", "prv_til_id_1", "prv_til_id_2" ],
          [ "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        ) + (prv_til_id_1-1)*(32 /2       /2        /2        )" , "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        ) + (prv_til_id_1)*(32 /2       /2        /2        ) + 2 - 1" ] ,
          [ "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        ) + (prv_til_id_2-1)*(32 /2       /2        /2        )" , "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        ) + (prv_til_id_2)*(32 /2       /2        /2        ) + 2 - 1" ] ,
          [ 0                                                                                                                              , 0                                                                                                                                    ] ],
        // 5. Würfel: sequential tiles
        [ [ "wg_id_1", "wg_id_2", "lcl_til_id_1", "lcl_til_id_2", "prv_til_id_1", "prv_til_id_2", "seq_til_id_1", "seq_til_id_2" ],
          [ "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        ) + (prv_til_id_1-1)*(32 /2       /2        /2        ) + (seq_til_id_1-1)*(32 /2       /2        /2        /2        )" , "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        ) + (prv_til_id_1-1)*(32 /2       /2        /2        ) + (seq_til_id_1)*(32 /2       /2        /2        /2        ) + 2 - 1" ] ,
          [ "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        ) + (prv_til_id_2-1)*(32 /2       /2        /2        ) + (seq_til_id_2-1)*(32 /2       /2        /2        /2        )" , "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        ) + (prv_til_id_2-1)*(32 /2       /2        /2        ) + (seq_til_id_2)*(32 /2       /2        /2        /2        ) + 2 - 1" ] ,
          [ 0                                                                                                                                                                                              , 0                                                                                                                                                                                                    ] ],
        // 6. Würfel: WIs
        [ [ "wg_id_1", "wg_id_2", "lcl_til_id_1", "lcl_til_id_2", "prv_til_id_1", "prv_til_id_2", "seq_til_id_1", "seq_til_id_2", "wi_id_1", "wi_id_2" ],
          [ "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        ) + (prv_til_id_1-1)*(32 /2       /2        /2        ) + (seq_til_id_1-1)*(32 /2       /2        /2        /2        ) + (wi_id_1-1)*(32 /2       /2        /2        /2        /2       )" , "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        ) + (prv_til_id_1-1)*(32 /2       /2        /2        ) + (seq_til_id_1-1)*(32 /2       /2        /2        /2        ) + (wi_id_1)*(32 /2       /2        /2        /2        /2       ) + 2 - 1" ] ,
          [ "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        ) + (prv_til_id_2-1)*(32 /2       /2        /2        ) + (seq_til_id_2-1)*(32 /2       /2        /2        /2        ) + (wi_id_2-1)*(32 /2       /2        /2        /2        /2       )" , "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        ) + (prv_til_id_2-1)*(32 /2       /2        /2        ) + (seq_til_id_2-1)*(32 /2       /2        /2        /2        ) + (wi_id_2)*(32 /2       /2        /2        /2        /2       ) + 2 - 1" ] ,

      ],
      "COLOR": [
        [ [ 0  , 255, 0  , 255 ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 0  , 0  , 0  , 0   ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 0  , 0  , 255, 255 ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 255, 0  , 0  , 255 ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 0  , 0  , 0  , 0   ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 128, 128, 128, 255 ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ]
      ]
    },
    "input mda": {
      "mapping": [
        // 1. Würfel: MDA
        [ [  ],
          [ 0, "2       *2       -1" ] ,
          [ 0, "2       *2       -1" ] ,
          [ 0, 0                     ] ],
        // 2. Würfel: WGs
        [ [ "wg_id_1", "wg_id_2" ],
          [ "(wg_id_1-1)*(2       )" , "(wg_id_1)*(2       ) - 1" ] ,
          [ "(wg_id_2-1)*(2       )" , "(wg_id_2)*(2       ) - 1" ] ,
          [ 0                        , 0                          ] ],
        // 3. Würfel: WIs
        [ [ "wg_id_1", "wg_id_2", "wi_id_1", "wi_id_2" ],
          [ "(wg_id_1-1)*(2       ) + (wi_id_1-1)" , "(wg_id_1-1)*(2       ) + (wi_id_1) - 1" ] ,
          [ "(wg_id_2-1)*(2       ) + (wi_id_2-1)" , "(wg_id_2-1)*(2       ) + (wi_id_2) - 1" ] ,
          [ 0                                      , 0                                        ] ]
      ],
      "COLOR": [
        [ [ 0  , 0  , 0  , 0   ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 0  , 0  , 0  , 0   ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 128, 128, 128, 255 ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ]
      ]
    },
    "computation": {
      "mapping": [
        // 1. Würfel: IS
        [ [  ],
          [ 0, "32  - 1" ] ,
          [ 0, "32  - 1" ] ,
          [ 0, 0         ] ],
        // 2. Würfel: WGs
        [ [ "wg_id_1", "wg_id_2" ],
          [ "(wg_id_1-1)*(32 /2       )" , "(wg_id_1)*(32 /2       ) - 1" ] ,
          [ "(wg_id_2-1)*(32 /2       )" , "(wg_id_2)*(32 /2       ) - 1" ] ,
          [ 0                            , 0                              ] ],
        // 3. Würfel: local tiles
        [ [ "wg_id_1", "wg_id_2", "lcl_til_id_1", "lcl_til_id_2" ],
          [ "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        )" , "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1)*(32 /2       /2        ) - 1" ] ,
          [ "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        )" , "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2)*(32 /2       /2        ) - 1" ] ,
          [ 0                                                                        , 0                                                                          ] ],
        // 4. Würfel: private tiles
        [ [ "wg_id_1", "wg_id_2", "lcl_til_id_1", "lcl_til_id_2", "prv_til_id_1", "prv_til_id_2" ],
          [ "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        ) + (prv_til_id_1-1)*(32 /2       /2        /2        )" , "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        ) + (prv_til_id_1)*(32 /2       /2        /2        ) - 1" ] ,
          [ "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        ) + (prv_til_id_2-1)*(32 /2       /2        /2        )" , "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        ) + (prv_til_id_2)*(32 /2       /2        /2        ) - 1" ] ,
          [ 0                                                                                                                              , 0                                                                                                                                ] ],
        // 5. Würfel: sequential tiles
        [ [ "wg_id_1", "wg_id_2", "lcl_til_id_1", "lcl_til_id_2", "prv_til_id_1", "prv_til_id_2", "seq_til_id_1", "seq_til_id_2" ],
          [ "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        ) + (prv_til_id_1-1)*(32 /2       /2        /2        ) + (seq_til_id_1-1)*(32 /2       /2        /2        /2        )" , "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        ) + (prv_til_id_1-1)*(32 /2       /2        /2        ) + (seq_til_id_1)*(32 /2       /2        /2        /2        ) - 1" ] ,
          [ "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        ) + (prv_til_id_2-1)*(32 /2       /2        /2        ) + (seq_til_id_2-1)*(32 /2       /2        /2        /2        )" , "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        ) + (prv_til_id_2-1)*(32 /2       /2        /2        ) + (seq_til_id_2)*(32 /2       /2        /2        /2        ) - 1" ] ,
          [ 0                                                                                                                                                                                              , 0                                                                                                                                                                                                ] ],
        // 6. Würfel: WIs
        [ [ "wg_id_1", "wg_id_2", "lcl_til_id_1", "lcl_til_id_2", "prv_til_id_1", "prv_til_id_2", "seq_til_id_1", "seq_til_id_2", "wi_id_1", "wi_id_2" ],
          [ "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        ) + (prv_til_id_1-1)*(32 /2       /2        /2        ) + (seq_til_id_1-1)*(32 /2       /2        /2        /2        ) + (wi_id_1-1)*(32 /2       /2        /2        /2        /2       )" , "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1-1)*(32 /2       /2        ) + (prv_til_id_1-1)*(32 /2       /2        /2        ) + (seq_til_id_1-1)*(32 /2       /2        /2        /2        ) + (wi_id_1)*(32 /2       /2        /2        /2        /2       ) - 1" ] ,
          [ "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        ) + (prv_til_id_2-1)*(32 /2       /2        /2        ) + (seq_til_id_2-1)*(32 /2       /2        /2        /2        ) + (wi_id_2-1)*(32 /2       /2        /2        /2        /2       )" , "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1-1)*(32 /2       /2        ) + (prv_til_id_2-1)*(32 /2       /2        /2        ) + (seq_til_id_2-1)*(32 /2       /2        /2        /2        ) + (wi_id_2)*(32 /2       /2        /2        /2        /2       ) - 1" ] ,

      ],
      "COLOR": [
        [ [ 0  , 0  , 0  , 0   ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 0  , 0  , 0  , 0   ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 252, 186, 3  , 128 ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 3  , 252, 115, 128 ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 0  , 0  , 0  , 0   ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 128, 128, 128, 255 ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ]
      ]
    },
    "output mda": {
      "mapping": [
        // 1. Würfel: local tiles (local memory)
        [ [  ],
          [ 0 , "(32 /2        ) - 1" ] ,
          [ 0 , "(32 /2        ) - 1" ] ,
          [ 0 , 0                     ] ],
        // 2. Würfel: WGs
        [ [ "wg_id_1", "wg_id_2" ],
          [ "(wg_id_1-1)*(32 /2        /2       )" , "(wg_id_1)*(32 /2        /2       ) - 1" ] ,
          [ "(wg_id_2-1)*(32 /2        /2       )" , "(wg_id_2)*(32 /2        /2       ) - 1" ] ,
          [ 0                                      , 0                                        ] ],
        // 3. Würfel: private tiles (private memory)
        [ [ "wg_id_1", "wg_id_2", "prv_til_id_1", "prv_til_id_2" ],
          [ "(wg_id_1-1)*(32 /2        /2       ) + (prv_til_id_1-1)*(32 /2        /2       /2        )" , "(wg_id_1-1)*(32 /2        /2       ) + (prv_til_id_1)*(32 /2        /2       /2        ) - 1" ] ,
          [ "(wg_id_2-1)*(32 /2        /2       ) + (prv_til_id_2-1)*(32 /2        /2       /2        )" , "(wg_id_2-1)*(32 /2        /2       ) + (prv_til_id_2)*(32 /2        /2       /2        ) - 1" ] ,
          [ 0                                                                                            , 0                                                                                              ] ],
        // 4. Würfel: sequential tiles
        [ [ "wg_id_1", "wg_id_2", "prv_til_id_1", "prv_til_id_2", "seq_til_id_1", "seq_til_id_2" ],
          [ "(wg_id_1-1)*(32 /2        /2       ) + (prv_til_id_1-1)*(32 /2        /2       /2        ) + (seq_til_id_1-1)*(32 /2        /2       /2        /2        )" , "(wg_id_1-1)*(32 /2        /2       ) + (prv_til_id_1-1)*(32 /2        /2       /2        ) + (seq_til_id_1)*(32 /2        /2       /2        /2        ) - 1" ] ,
          [ "(wg_id_2-1)*(32 /2        /2       ) + (prv_til_id_2-1)*(32 /2        /2       /2        ) + (seq_til_id_2-1)*(32 /2        /2       /2        /2        )" , "(wg_id_2-1)*(32 /2        /2       ) + (prv_til_id_2-1)*(32 /2        /2       /2        ) + (seq_til_id_2)*(32 /2        /2       /2        /2        ) - 1" ] ,
          [ 0                                                                                                                                                            , 0                                                                                                                                                              ] ],
        // 5. Würfel: WIs
        [ [ "wg_id_1", "wg_id_2", "prv_til_id_1", "prv_til_id_2", "seq_til_id_1", "seq_til_id_2", "wi_id_1", "wi_id_2" ],
          [ "(wg_id_1-1)*(32 /2        /2       ) + (prv_til_id_1-1)*(32 /2        /2       /2        ) + (seq_til_id_1-1)*(32 /2        /2       /2        /2        ) + (wi_id_1-1)*(32 /2        /2       /2        /2        /2       )" , "(wg_id_1-1)*(32 /2        /2       ) + (prv_til_id_1-1)*(32 /2        /2       /2        ) + (seq_til_id_1-1)*(32 /2        /2       /2        /2        ) + (wi_id_1)*(32 /2        /2       /2        /2        /2       ) - 1" ] ,
          [ "(wg_id_2-1)*(32 /2        /2       ) + (prv_til_id_2-1)*(32 /2        /2       /2        ) + (seq_til_id_2-1)*(32 /2        /2       /2        /2        ) + (wi_id_2-1)*(32 /2        /2       /2        /2        /2       )" , "(wg_id_2-1)*(32 /2        /2       ) + (prv_til_id_2-1)*(32 /2        /2       /2        ) + (seq_til_id_2-1)*(32 /2        /2       /2        /2        ) + (wi_id_2)*(32 /2        /2       /2        /2        /2       ) - 1" ] ,
          [ 0                                                                                                                                                                                                                                , 0                                                                                                                                                                                                                                  ] ]
      ],
      "COLOR": [
        [ [ 0  , 0  , 255, 255 ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 0  , 0  , 0  , 0   ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 255, 0  , 0  , 255 ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 0  , 0  , 0  , 0   ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 128, 128, 128, 255 ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ]
      ]
    },
    "output buffer": {
      "mapping": [
        // 1. Würfel: IS (global memory)
        [ [  ],
          [ 0, "32  - 1" ] ,
          [ 0, "32  - 1" ] ,
          [ 0, 0         ] ],
        // 2. Würfel: WGs
        [ [ "wg_id_1", "wg_id_2" ],
          [ "(wg_id_1-1)*(32 /2       )" , "(wg_id_1)*(32 /2       ) - 1" ] ,
          [ "(wg_id_2-1)*(32 /2       )" , "(wg_id_2)*(32 /2       ) - 1" ] ,
          [ 0                            , 0                              ] ],
        // 3. Würfel: WIs
        [ [ "wg_id_1", "wg_id_2", "lcl_til_id_1", "lcl_til_id_2", "prv_til_id_1", "prv_til_id_2", "seq_til_id_1", "seq_til_id_2", "wi_id_1", "wi_id_2" ],
          [ "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        ) + (prv_til_id_1-1)*(32 /2       /2        /2        ) + (seq_til_id_1-1)*(32 /2       /2        /2        /2        ) + (wi_id_1-1)*(32 /2       /2        /2        /2        /2       )" , "(wg_id_1-1)*(32 /2       ) + (lcl_til_id_1-1)*(32 /2       /2        ) + (prv_til_id_1-1)*(32 /2       /2        /2        ) + (seq_til_id_1-1)*(32 /2       /2        /2        /2        ) + (wi_id_1)*(32 /2       /2        /2        /2        /2       ) - 1" ] ,
          [ "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        ) + (prv_til_id_2-1)*(32 /2       /2        /2        ) + (seq_til_id_2-1)*(32 /2       /2        /2        /2        ) + (wi_id_2-1)*(32 /2       /2        /2        /2        /2       )" , "(wg_id_2-1)*(32 /2       ) + (lcl_til_id_2-1)*(32 /2       /2        ) + (prv_til_id_2-1)*(32 /2       /2        /2        ) + (seq_til_id_2-1)*(32 /2       /2        /2        /2        ) + (wi_id_2)*(32 /2       /2        /2        /2        /2       ) - 1" ] ,
          [ 0                                                                                                                                                                                                                                                                  , 0                                                                                                                                                                                                                                                                    ] ]
      ],
      "COLOR": [
        [ [ 0  , 255, 0  , 255 ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 0  , 0  , 0  , 0   ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ],
        [ [ 128, 128, 128, 255 ], [ 10 , 10 , 10 , 255 ], [ 80 , 80 , 80 , 255 ] ]
      ]
    }
  }
}